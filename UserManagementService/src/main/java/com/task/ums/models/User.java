package com.task.ums.models;

import jakarta.persistence.*;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import lombok.Getter;
import lombok.Setter;

import java.time.LocalDate;

/**
 * Represents a User entity for the User Management Service.
 *
 * This class maps to the "users" table in the database and includes validation
 * constraints for various fields to ensure data integrity and correctness.
 *
 * Annotations are used to define the table structure and validation rules:
 * - `@Entity` marks this class as a JPA entity.
 * - `@Table(name = "users")` specifies the table name in the database.
 * - Lombok's `@Getter` and `@Setter` generate getter and setter methods for all fields.
 * - Validation annotations such as `@NotNull`, `@NotEmpty`, `@Email`, and `@Size`
 *   ensure that the fields meet the specified constraints.
 */
@Entity
@Getter
@Setter
@Table(name = "users")
public class User {
    /**
     * The unique identifier for a user. This field is auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The first name of the user. This field is mandatory and cannot be empty.
     */
    @NotNull(message = "The firstname is mandatory.")
    @NotEmpty(message = "The firstname cannot be empty.")
    private String firstname;

    /**
     * The last name of the user. This field is mandatory and cannot be empty.
     */
    @NotNull(message = "The lastname is mandatory.")
    @NotEmpty(message = "The lastname cannot be empty.")
    private String lastname;

    /**
     * The email address of the user. This field is mandatory and must be in a valid email format.
     */
    @NotNull(message = "The email address is mandatory.")
    @Email(message = "The email has to be in a valid format.")
    private String email;

    /**
     * The birthday of the user. This field is optional.
     */
    private LocalDate birthday; // optional field

    /**
     * The password of the user. This field is mandatory and must be between 6 and 20 characters in length.
     */
    @NotNull(message = "The password is mandatory.")
    @Size(min = 6, max = 20, message = "The password must have a valid length (6-20 characters).")
    private String password;
}
